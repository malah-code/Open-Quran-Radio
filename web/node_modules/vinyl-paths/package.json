{
  "_args": [
    [
      {
        "raw": "vinyl-paths@^2.1.0",
        "scope": null,
        "escapedName": "vinyl-paths",
        "name": "vinyl-paths",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "C:\\Partition-2\\Projects\\Android\\Open-Quran\\web-source"
    ]
  ],
  "_from": "vinyl-paths@>=2.1.0 <3.0.0",
  "_id": "vinyl-paths@2.1.0",
  "_inCache": true,
  "_location": "/vinyl-paths",
  "_nodeVersion": "4.2.1",
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vinyl-paths@^2.1.0",
    "scope": null,
    "escapedName": "vinyl-paths",
    "name": "vinyl-paths",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/vinyl-paths/-/vinyl-paths-2.1.0.tgz",
  "_shasum": "00820437cba38262cef8802d840f93e3392ee44b",
  "_shrinkwrap": null,
  "_spec": "vinyl-paths@^2.1.0",
  "_where": "C:\\Partition-2\\Projects\\Android\\Open-Quran\\web-source",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/vinyl-paths/issues"
  },
  "dependencies": {
    "through2": "^2.0.0"
  },
  "description": "Get the file paths in a vinyl stream",
  "devDependencies": {
    "ava": "*",
    "gulp-util": "^3.0.1",
    "pinkie-promise": "^2.0.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "00820437cba38262cef8802d840f93e3392ee44b",
    "tarball": "https://registry.npmjs.org/vinyl-paths/-/vinyl-paths-2.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "3398351b90091e0255710ea48de9120fc1c08cbd",
  "homepage": "https://github.com/sindresorhus/vinyl-paths#readme",
  "keywords": [
    "gulpplugin",
    "vinyl",
    "gulp",
    "paths",
    "path",
    "file",
    "tap",
    "through",
    "stream"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "vinyl-paths",
  "optionalDependencies": {},
  "readme": "# vinyl-paths [![Build Status](https://travis-ci.org/sindresorhus/vinyl-paths.svg?branch=master)](https://travis-ci.org/sindresorhus/vinyl-paths)\n\n> Get the file paths in a [vinyl](https://github.com/wearefractal/vinyl) stream\n\nUseful when you need to use the file paths from a gulp pipeline in Promise-returning node module.\n\nSimply pass a promise-returning function such as `del` and `vinyl-paths` will provide each path in the stream as the first argument.\n\n\n## Install\n\n```\n$ npm install --save vinyl-paths\n```\n\n\n## Usage\n\n```js\n// gulpfile.js\nvar gulp = require('gulp');\nvar stripDebug = require('gulp-strip-debug');\nvar del = require('del');\nvar vinylPaths = require('vinyl-paths');\n\n// log file paths in the stream\ngulp.task('log', function () {\n\treturn gulp.src('app/*')\n\t\t.pipe(stripDebug())\n\t\t.pipe(vinylPaths(function (paths) {\n\t\t\tconsole.log('Paths:', paths);\n\t\t\treturn Promise.resolve();\n\t\t}));\n});\n\n// delete files in the stream\ngulp.task('delete', function () {\n\treturn gulp.src('app/*')\n\t\t.pipe(stripDebug())\n\t\t.pipe(vinylPaths(del));\n});\n\n// or if you need to use the paths after the pipeline\ngulp.task('delete2', function () {\n\treturn new Promise(function (resolve, reject) {\n\t\tvar vp = vinylPaths();\n\n\t\tgulp.src('app/*')\n\t\t\t.pipe(vp)\n\t\t\t.pipe(gulp.dest('dist'))\n\t\t\t.on('end', function () {\n\t\t\t\tdel(vp.paths).then(resolve).catch(reject);\n\t\t\t});\n\t});\n});\n```\n\n*You should only use a vanilla node module like this if you're already using other plugins in the pipeline, otherwise just use the module directly as `gulp.src` is costly. Remember that gulp tasks can return Promises as well as streams!*\n\n\n## API\n\n### vinylPaths([callback])\n\nThe optionally supplied callback will get a file path for every file and is expected to return a Promise. An array of the file paths so far is available as a `paths` property on the stream.\n\n#### callback(path)\n\n\n## Related\n\n- [gulp-revert-path](https://github.com/sindresorhus/gulp-revert-path) - Revert the previous `file.path` change\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/vinyl-paths.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "2.1.0"
}
